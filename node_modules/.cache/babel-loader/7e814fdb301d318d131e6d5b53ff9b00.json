{"ast":null,"code":"var _jsxFileName = \"/home/dev/Submission/react-personal-api/react-personal-api/src/component/image-results/ImageResults.js\";\nimport React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport { GridList, GridTitle } from 'material-ui/gridList';\nimport IconButton from 'material-ui/IconButton';\nimport ZoomIn from 'material-ui/svg-icons/action/zoom-in';\nimport Dialog from 'material-ui/FlatButton';\nimport { GridTile } from 'material-ui';\n\nclass ImageResults extends Component {\n  render() {\n    let imageListContent;\n    const images = this.props.images;\n\n    if (images) {\n      imageListContent = React.createElement(GridList, {\n        cols: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, images.map(img => React.createElement(GridTile, {\n        title: img.tags,\n        key: img.id,\n        subtitle: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, \"by \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, \" \", img.user, \" \")),\n        actionIcon: React.createElement(IconButton, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, React.createElement(\"zoomIn\", {\n          color: \"white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: img.largeImageUrl,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }))));\n    } else {\n      imageListContent = null;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \" \", imageListContent);\n  }\n\n}\n\nImageResults.propTypes = {\n  images: propTypes.array.isRequired\n};\nexport default ImageResults;","map":{"version":3,"sources":["/home/dev/Submission/react-personal-api/react-personal-api/src/component/image-results/ImageResults.js"],"names":["React","Component","propTypes","GridList","GridTitle","IconButton","ZoomIn","Dialog","GridTile","ImageResults","render","imageListContent","images","props","map","img","tags","id","user","largeImageUrl","array","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,sBAApC;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,QAAT,QAAyB,aAAzB;;AAEA,MAAMC,YAAN,SAA2BR,SAA3B,CAAqC;AACjCS,EAAAA,MAAM,GAAG;AACL,QAAIC,gBAAJ;AADK,UAEGC,MAFH,GAEc,KAAKC,KAFnB,CAEGD,MAFH;;AAIL,QAAGA,MAAH,EAAU;AACND,MAAAA,gBAAgB,GACZ,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKC,MAAM,CAACE,GAAP,CAAWC,GAAG,IACX,oBAAC,QAAD;AACI,QAAA,KAAK,EAAIA,GAAG,CAACC,IADjB;AAEI,QAAA,GAAG,EAAID,GAAG,CAACE,EAFf;AAGI,QAAA,QAAQ,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAUF,GAAG,CAACG,IAAd,MADP,CAJR;AAQI,QAAA,UAAU,EACN,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAQ,UAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAeI;AAAK,QAAA,GAAG,EAAIH,GAAG,CAACI,aAAhB;AAA+B,QAAA,GAAG,EAAG,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfJ,CADH,CADL,CADJ;AA0BH,KA3BD,MA2BK;AACDR,MAAAA,gBAAgB,GAAG,IAAnB;AACH;;AAED,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAOA,gBAAP,CAAP;AACH;;AArCgC;;AAuCjCF,YAAY,CAACP,SAAb,GAAyB;AACrBU,EAAAA,MAAM,EAAEV,SAAS,CAACkB,KAAV,CAAgBC;AADH,CAAzB;AAKJ,eAAeZ,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport { GridList, GridTitle } from 'material-ui/gridList';\nimport IconButton from 'material-ui/IconButton';\nimport ZoomIn from 'material-ui/svg-icons/action/zoom-in';\nimport Dialog from 'material-ui/FlatButton';\nimport { GridTile } from 'material-ui';\n\nclass ImageResults extends Component {\n    render() {\n        let imageListContent;\n        const { images } = this.props;\n\n        if(images){\n            imageListContent = (\n                <GridList cols={3}>\n                    {images.map(img =>(\n                        <GridTile\n                            title = {img.tags}\n                            key = {img.id}\n                            subtitle = {\n                                <span>\n                                    by <strong> {img.user} </strong>\n                                </span>\n                            }\n                            actionIcon ={\n                                <IconButton>\n                                    <zoomIn color=\"white\"/>\n                                </IconButton>\n\n                            }\n                        >\n                            <img src = {img.largeImageUrl} alt = \"\" />\n                        </GridTile>\n                        ))}\n                \n                </GridList>\n            )\n\n\n        }else{\n            imageListContent = null\n        }\n\n        return <div> {imageListContent}</div> ;\n    }\n}\n    ImageResults.propTypes = {\n        images: propTypes.array.isRequired\n    \n}\n\nexport default ImageResults;"]},"metadata":{},"sourceType":"module"}